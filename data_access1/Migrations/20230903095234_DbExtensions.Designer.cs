// <auto-generated />
using HotelDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace data_access1.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20230903095234_DbExtensions")]
    partial class DbExtensions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelDb.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Cities");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Countries");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "France"
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Employees");

                    b.HasIndex("HotelId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gmail = "roberto1237@gmil.com",
                            HotelId = 1,
                            Name = "Robert",
                            PhoneNumber = "+380 97 077 2533",
                            PositionId = 1,
                            Salary = 3000m,
                            Surname = "Robertov"
                        },
                        new
                        {
                            Id = 2,
                            Gmail = "vika17@gmil.com",
                            HotelId = 1,
                            Name = "Vika",
                            PhoneNumber = "+380 97 707 2323",
                            PositionId = 2,
                            Salary = 2000m,
                            Surname = "Vivikivna"
                        },
                        new
                        {
                            Id = 3,
                            Gmail = "danyil32@gmil.com",
                            HotelId = 1,
                            Name = "Danya",
                            PhoneNumber = "+380 97 036 2632",
                            PositionId = 3,
                            Salary = 1000m,
                            Surname = "Dayiilovich"
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CountHotelRooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Hotels");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Sun 12a",
                            CityId = 1,
                            ContactNumber = "+380 97 234 1267",
                            CountHotelRooms = 100,
                            Description = "Cool hotel, 5 stars",
                            Name = "SunSet",
                            Stars = 5
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Sunny 18a",
                            CityId = 2,
                            ContactNumber = "+380 68 274 1247",
                            CountHotelRooms = 70,
                            Description = "Cool service, 4 stars",
                            Name = "SunRise",
                            Stars = 4
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Moon 12a",
                            CityId = 3,
                            ContactNumber = "+380 44 224 6061",
                            CountHotelRooms = 120,
                            Description = "Great hotel, 5 stars",
                            Name = "MoonRise",
                            Stars = 5
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountVisitors")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceForDay")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id")
                        .HasName("HotelRooms");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountVisitors = 3,
                            HotelId = 1,
                            IsVip = true,
                            Number = 1,
                            PriceForDay = 100m
                        },
                        new
                        {
                            Id = 2,
                            CountVisitors = 2,
                            HotelId = 1,
                            IsVip = false,
                            Number = 2,
                            PriceForDay = 50m
                        },
                        new
                        {
                            Id = 3,
                            CountVisitors = 1,
                            HotelId = 1,
                            IsVip = false,
                            Number = 3,
                            PriceForDay = 30m
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Positions");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Boss"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Doorman"
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HotelRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Visitors");

                    b.HasIndex("HotelRoomId");

                    b.ToTable("Visitors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelRoomId = 1,
                            Name = "Den",
                            PhoneNumber = "+380 97 354 1278",
                            Surname = "Deniv"
                        },
                        new
                        {
                            Id = 2,
                            HotelRoomId = 2,
                            Name = "Vlad",
                            PhoneNumber = "+380 68 250 2228",
                            Surname = "Vladov"
                        },
                        new
                        {
                            Id = 3,
                            HotelRoomId = 3,
                            Name = "Gill",
                            PhoneNumber = "+380 97 574 2118",
                            Surname = "Gillov"
                        });
                });

            modelBuilder.Entity("HotelDb.Entities.City", b =>
                {
                    b.HasOne("HotelDb.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelDb.Entities.Employee", b =>
                {
                    b.HasOne("HotelDb.Entities.Hotel", "Hotel")
                        .WithMany("Employees")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelDb.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("HotelDb.Entities.Hotel", b =>
                {
                    b.HasOne("HotelDb.Entities.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HotelDb.Entities.HotelRoom", b =>
                {
                    b.HasOne("HotelDb.Entities.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelDb.Entities.Visitor", b =>
                {
                    b.HasOne("HotelDb.Entities.HotelRoom", "HotelRoom")
                        .WithMany("Visitors")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("HotelDb.Entities.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("HotelDb.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("HotelDb.Entities.Hotel", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("HotelDb.Entities.HotelRoom", b =>
                {
                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("HotelDb.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
