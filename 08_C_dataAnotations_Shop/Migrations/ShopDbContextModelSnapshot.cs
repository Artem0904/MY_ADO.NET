// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _08_C_dataAnotations_Shop.Data;

#nullable disable

namespace _08_C_dataAnotations_Shop.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.City", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Cities");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Warsaw"
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Countries");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Poland"
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Categories");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Products"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Artistic"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Technical"
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Posotions");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Consultant"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SecurityGuard"
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Products");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 2.5f,
                            IsInStock = true,
                            Name = "Bread",
                            Price = 30m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Discount = 6.5f,
                            IsInStock = true,
                            Name = "Easel",
                            Price = 300m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 3.5f,
                            IsInStock = true,
                            Name = "Smartphone",
                            Price = 6000m,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Shops");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Bogoyavlenska",
                            CityId = 1,
                            Name = "ATB",
                            ParkingArea = 20
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Germansky 56",
                            CityId = 2,
                            Name = "Adolfik"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Lidlovska 2",
                            CityId = 3,
                            Name = "Lidl",
                            ParkingArea = 50
                        });
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("Workers");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gmail = "vitalka325@gmail.com",
                            Name = "Vitalik",
                            PhoneNumber = "+380 68 735 9273",
                            PositionId = 2,
                            Salary = 3000m,
                            ShopId = 1,
                            Surname = "Vitaliev"
                        },
                        new
                        {
                            Id = 2,
                            Gmail = "viktor523@gmail.com",
                            Name = "Vitya",
                            PhoneNumber = "+380 66 734 9273",
                            PositionId = 1,
                            Salary = 5000m,
                            ShopId = 2,
                            Surname = "Vityovich"
                        },
                        new
                        {
                            Id = 3,
                            Gmail = "sasha235@gmail.com",
                            Name = "Sashka",
                            PhoneNumber = "+380 97 435 9273",
                            PositionId = 3,
                            Salary = 1500m,
                            ShopId = 3,
                            Surname = "Sanych"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("_08_C_dataAnotations_Shop.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_08_C_dataAnotations_Shop.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.City", b =>
                {
                    b.HasOne("_08_C_dataAnotations_Shop.Country", "Country")
                        .WithMany("Cites")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Product", b =>
                {
                    b.HasOne("_08_C_dataAnotations_Shop.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Shop", b =>
                {
                    b.HasOne("_08_C_dataAnotations_Shop.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Worker", b =>
                {
                    b.HasOne("_08_C_dataAnotations_Shop.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_08_C_dataAnotations_Shop.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Country", b =>
                {
                    b.Navigation("Cites");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_08_C_dataAnotations_Shop.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
